Basic Calculator notes:

https://edabit.com/challenge/gyfsGx7KrGLscxFrD

PROMPT:

Create a function that takes two numbers and a mathematical operator + - / * and will perform a calculation with the given numbers.

ELEMENTS:

1) Calculator class with calculator(int firstInt, String operator, int secondInt) method that returns int
2) String to operator parser? switch (operator)?

MY THOUGHTS:

At first I was thinking that the way it wanted the method to run was to change the operator String directly into an expression,
but now I realize I can probably just use a switch and get the same result.

I also realized that if there's an integer pair that doesn't divide evenly, the result will be a floored/rounded-down int.
I'll see about notifying the user or manually handling those cases shortly.

PROTOTYPE:

public Class BasicCalculator{
	public int calculator(int firstInputInt, String operator, int secondInputInt) {
		int firstInt = firstInputInt;
		int secondInt = secondInputInt;
		int answer = 0;
		
		switch (operator) {
			case "+":
				answer = (firstInt + secondInt);
				break;
			case "-":
				answer = (firstInt - secondInt);
				break;
			case "*":
				answer = (firstInt(secondInt));
				break;
			case "/":
				if (firstInt/secondInt == 0){
					sysout("Divide by 0 error");
				} else {
				answer = (firstInt/secondInt);
		
		return ;
	} 
}

POST ACTIVITY THOUGHTS:

I wasn't thinking about my case "/": clearly, because if firstInt/secondInt == 0, then firstInt was 0,
when the test was trying to catch secondInt being 0, which would be undefined. I've updated my class
here to be more accurate, which will correctly calculate 0/2 as 0, but 2/0 as "undefined".

The unit tester in the edabit webapp caught it and made my mistake clear to me. Good to go now though!

The submission checker did also show the class as taking int char int as the arguments, which I didn't do initially
in my class. I conformed to the standard it requested, but am converting it to a String to get the practice in.
