ACTIVITY NOTES FOR:

https://edabit.com/challenge/4kEHkvobTA4i6AQRE

PROMPT:

This Triangular Number Sequence is generated from a pattern of dots that form a triangle. The first 5 numbers of the sequence, or dots, are:

1, 3, 6, 10, 15

This means that the first triangle has just one dot, the second one has three dots, the third one has 6 dots and so on.

Write a function that returns the number of dots when given its corresponding triangle number of the sequence.

ELEMENTS:

1) Mathmatical pattern
2) public int triangle(int inputNumber)

MY THOUGHTS:

This seems pretty straightforward, with the pattern being the addition of n+1 units for n's position.
The difference from 1 to 3 is 2, from 3 to 6 is 3, from 6 to 10 is 4, etc.

1, 3, 6, 10, 15		Input of 1 gives 1, input of 2 gives 3 (2 + 1 is 3), input of 3 gives 6 (3 + 3 is 6), input of 4 gives 10 (4 + 6 is 10).
Output == int inputPosition + array[inputPosition - 1]? But there's not a predefined array...

*2

2, 6, 12, 20, 30 	Input of 1 gives 2, input of 2 gives 6, input of 3 gives 12. Output == int inputPosition * (array[inputPosition + 1])?

PROTOTYPE:

public int triangle(int inputNumber) {
	return ((inputNumber * (inputNumber + 1)) / 2);
}

POST ACTIVITY THOUGHTS:


